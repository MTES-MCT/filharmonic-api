version: 2.1

executors:
  go:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/MTES-MCT/filharmonic-api
  gotest:
    docker:
      - image: circleci/golang:1.11
      - image: circleci/postgres:11.1-alpine
        environment:
          POSTGRES_USER: filharmonic
          POSTGRES_PASS: filharmonic
          POSTGRES_DB: filharmonic
    working_directory: /go/src/github.com/MTES-MCT/filharmonic-api
  gometalinter:
    docker:
      - image: mozgiii/gometalinter-docker:v2
    working_directory: /go/src/github.com/MTES-MCT/filharmonic-api

jobs:
  install-dependencies:
    executor: go
    steps:
      - checkout
      - run: dep ensure
      - persist_to_workspace:
          root: '/go/src/github.com/MTES-MCT'
          paths:
            - filharmonic-api/

  lint:
    executor: gometalinter
    steps:
      - attach_workspace:
          at: '/go/src/github.com/MTES-MCT'
      - run:
          command: gometalinter --deadline 5m --vendor --disable=golint ./...

  test:
    executor: gotest
    steps:
      - attach_workspace:
          at: '/go/src/github.com/MTES-MCT'
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - run:
          command: |
            go get github.com/mattn/goveralls
            go test -cover -race -coverpkg ./... -coverprofile=coverage.out -p 1 -v ./...
            sed -i '/mocks/d' coverage.out
            goveralls -coverprofile=coverage.out -service=circle-ci

  check-migrations:
    executor: gotest
    steps:
      - attach_workspace:
          at: '/go/src/github.com/MTES-MCT'
      - run: |
          curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          echo "deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
          sudo apt-get update
          sudo apt-get install -y postgresql-client-11
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - run:
          command: ./database/scripts/check_migrations.sh

  build:
    executor: go
    steps:
      - attach_workspace:
          at: '/go/src/github.com/MTES-MCT'
      - run: CGO_ENABLED=0 go build -a -installsuffix cgo -ldflags "-extldflags '-static'" -o filharmonic-api
      - persist_to_workspace:
          root: '/go/src/github.com/MTES-MCT'
          paths:
            - filharmonic-api/filharmonic-api

  build-docker:
    executor: go
    steps:
      - attach_workspace:
          at: '/go/src/github.com/MTES-MCT'
      - setup_remote_docker
      - run: |
          if [[ -z "$DOCKERHUB_USER" || -z "$DOCKERHUB_PASSWORD" ]]; then
            echo "Missing DOCKERHUB_USER or DOCKERHUB_PASSWORD environment variables!"
            exit 1
          fi
          docker build -t betagouv/filharmonic-api:$CIRCLE_SHA1 .

          echo "$DOCKERHUB_PASSWORD" | docker login -u $DOCKERHUB_USER --password-stdin
          docker push betagouv/filharmonic-api:$CIRCLE_SHA1
          if [[ "$CIRCLE_BRANCH" = "master" ]]; then
            docker tag betagouv/filharmonic-api:$CIRCLE_SHA1 betagouv/filharmonic-api:latest
            docker push betagouv/filharmonic-api:latest
          fi

workflows:
  commit:
    jobs:
      - install-dependencies:
          requires: []

      - lint:
          requires:
            - install-dependencies
      - test:
          requires:
            - install-dependencies
      - check-migrations:
          requires:
            - install-dependencies

      - build:
          requires:
            - lint
            - test
            - check-migrations

      - build-docker:
          requires:
            - build
