// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Sessions is an autogenerated mock type for the Sessions type
type Sessions struct {
	mock.Mock
}

// Add provides a mock function with given fields: userId
func (_m *Sessions) Add(userId int64) (string, error) {
	ret := _m.Called(userId)

	var r0 string
	if rf, ok := ret.Get(0).(func(int64) string); ok {
		r0 = rf(userId)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(userId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: sessionToken
func (_m *Sessions) Delete(sessionToken string) error {
	ret := _m.Called(sessionToken)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(sessionToken)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: sessionToken
func (_m *Sessions) Get(sessionToken string) (int64, error) {
	ret := _m.Called(sessionToken)

	var r0 int64
	if rf, ok := ret.Get(0).(func(string) int64); ok {
		r0 = rf(sessionToken)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(sessionToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Set provides a mock function with given fields: sessionToken, userId
func (_m *Sessions) Set(sessionToken string, userId int64) error {
	ret := _m.Called(sessionToken, userId)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, int64) error); ok {
		r0 = rf(sessionToken, userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
